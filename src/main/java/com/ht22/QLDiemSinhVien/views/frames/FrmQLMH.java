/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ht22.QLDiemSinhVien.views.frames;

import com.ht22.QLDiemSinhVien.DAO.DAOKhoa;
import com.ht22.QLDiemSinhVien.DAO.SubjectDao;
import com.ht22.QLDiemSinhVien.entity.Khoa;
import com.ht22.QLDiemSinhVien.entity.Subject;

import java.util.ArrayList;
import java.util.List;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author dmx
 */
public class FrmQLMH extends javax.swing.JFrame {
//    git test
    DAOKhoa categoryDao = new DAOKhoa();
    SubjectDao subjectDao = new SubjectDao();
    DefaultTableModel tblModelSubject = null;
    List<Subject> listSubject = new ArrayList<>();
    Subject subjectSelected = null;
    int[] subjectIdSelected = null;
    DefaultListModel<Khoa> listModelCategory = null;



    /**
     * Creates new form FrmQLMH
     */
    public FrmQLMH() {
        initComponents();
//        txtMaHocPhan.setInputVerifier(new CheckMaHocPhanVerify(subjectSelected));
//        txtTenHocPhan.setInputVerifier(new StringVerify());
//        txtSoTinChi.setInputVerifier(new NumberVerify());
        this.setLocationRelativeTo(null);
        loadDatatoJList();
        loadDatatoCombox();
        loadDatatoJTable();
//        btnUpdateCategory.setEnabled(false);
//        btnUpdate.setEnabled(false);
//        btnRemoveCategory.setEnabled(false);
//        btnRemove.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCategory = new javax.swing.JList<Khoa>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnNewCategory = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnUpdateCategory = new javax.swing.JButton();
        btnRemoveCategory = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSubject = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbCategory = new javax.swing.JComboBox<Khoa>();
        txtMaHocPhan = new javax.swing.JTextField();
        txtTenHocPhan = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSoTinChi = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        taGhiChu = new javax.swing.JTextArea();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jLabel11.setText("(*) :");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lstCategory.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51)), "Danh mục chuyên ngành", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        lstCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstCategoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstCategory);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("QUẢN LÝ MÔN HỌC");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(326, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(324, 324, 324))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btnNewCategory.setText("Thêm");
        btnNewCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCategoryActionPerformed(evt);
            }
        });

        btnUpdateCategory.setText("Sửa");
        btnUpdateCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCategoryActionPerformed(evt);
            }
        });

        btnRemoveCategory.setText("Xóa");
        btnRemoveCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveCategoryActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Thông tin chi tiết");

        tblSubject.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblSubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSubjectMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSubject);

        jLabel4.setText("Category");

        jLabel5.setText("Mã học phần");

        jLabel6.setText("Tên học phần");

        txtMaHocPhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaHocPhanActionPerformed(evt);
            }
        });

        txtTenHocPhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenHocPhanActionPerformed(evt);
            }
        });

        jLabel7.setText("Số tín chỉ");

        jLabel8.setText("Ghi chú:");

        txtSoTinChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoTinChiActionPerformed(evt);
            }
        });

        taGhiChu.setColumns(20);
        taGhiChu.setRows(5);
        jScrollPane3.setViewportView(taGhiChu);

        btnNew.setText("Thêm");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnRemove.setText("Xóa");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("(*) :");

        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("(*) :");

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("(*) :");

        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("(*) :");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(383, 383, 383))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(btnNew)
                                                .addGap(28, 28, 28)
                                                .addComponent(btnUpdate)
                                                .addGap(8, 8, 8))
                                            .addComponent(cbCategory, 0, 200, Short.MAX_VALUE)
                                            .addComponent(txtMaHocPhan)
                                            .addComponent(txtTenHocPhan))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnSave)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnRemove))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(46, 46, 46)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtSoTinChi, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(btnNewCategory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdateCategory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemoveCategory))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtSoTinChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel13))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtMaHocPhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtTenHocPhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewCategory)
                    .addComponent(btnUpdateCategory)
                    .addComponent(btnRemoveCategory)
                    .addComponent(btnNew)
                    .addComponent(btnSave)
                    .addComponent(btnRemove)
                    .addComponent(btnUpdate))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCategoryActionPerformed
        // TODO add your handling code here:
        this.dispose();   // ẩn form cũ và hiện form mới
        new frm_khoa().setVisible(true);
    }//GEN-LAST:event_btnNewCategoryActionPerformed

    private void txtSoTinChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoTinChiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoTinChiActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        txtMaHocPhan.setText("");
        txtTenHocPhan.setText("");
        txtSoTinChi.setText("");
        taGhiChu.setText("");
    }//GEN-LAST:event_btnNewActionPerformed

    private void txtMaHocPhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaHocPhanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaHocPhanActionPerformed

    private void txtTenHocPhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenHocPhanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenHocPhanActionPerformed

    private void lstCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstCategoryMouseClicked
        // TODO add your handling code here:
        //categorySelected = lstCategory.getSelectedValue();
//        btnUpdateCategory.setEnabled(true);
//        btnUpdate.setEnabled(false);
//        btnRemoveCategory.setEnabled(true);
//        btnRemove.setEnabled(false);
//        int[] index_Cate_Selected = lstCategory.getSelectedIndices();
//        int[] categoryId = new int[index_Cate_Selected.length];
//        for (int i = 0; i < index_Cate_Selected.length; i++) {
//            categoryId[i] = listModelCategory.get(index_Cate_Selected[i]).getId();
//        }
//        //lstCategory.getSelectedIndices()
//        //listSubject = subjectDao.getByCategoryId(categorySelected.getId());
//        loadDatatoJTableByCategoryId(categoryId);

    }//GEN-LAST:event_lstCategoryMouseClicked

    private void btnUpdateCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCategoryActionPerformed
        //
        this.dispose();   // ẩn form cũ và hiện form mới
        new frm_khoa().setVisible(true);
    }//GEN-LAST:event_btnUpdateCategoryActionPerformed

    private void btnRemoveCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveCategoryActionPerformed
        // TODO add your handling code here:
        this.dispose();   // ẩn form cũ và hiện form mới
        new frm_khoa().setVisible(true);
    }//GEN-LAST:event_btnRemoveCategoryActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
//        int categoryId =((Category)cbCategory.getSelectedItem()).getId();
//        String maHocPhan = txtMaHocPhan.getText().trim();
//        String tenHocPhan = txtTenHocPhan.getText().trim();
//        String soTinChi = txtSoTinChi.getText().trim();
//        String ghiChu = taGhiChu.getText().trim();
//        if (maHocPhan.equals("") || tenHocPhan.equals("") || soTinChi.equals("") || ghiChu.equals("") ) {
//            JOptionPane.showMessageDialog(rootPane, "Bạn phải nhập đủ thông tin!!!");
//        } else {
//            int idNew = subjectDao.insert(new Subject(0, categoryId, maHocPhan, tenHocPhan, Integer.parseInt(soTinChi), ghiChu));
//            if (idNew >= 0) {
//                JOptionPane.showMessageDialog(rootPane, "Thêm mới môn học thành công!!");
//                String nameCate = categoryDao.get(categoryId).get().getTenChuyenNganh();
//                Object[] rowData = new Object[] {nameCate ,maHocPhan,tenHocPhan,soTinChi,ghiChu};
//                tblModelSubject.addRow(rowData);
//        }   else {
//                JOptionPane.showMessageDialog(rootPane, "Thêm mới môn học thất bại!!");
//            }
//        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
//        int categoryId =((Category)cbCategory.getSelectedItem()).getId();
//        String maHocPhan = txtMaHocPhan.getText().trim();
//        String tenHocPhan = txtTenHocPhan.getText().trim();
//        String soTinChi = txtSoTinChi.getText().trim();
//        String ghiChu = taGhiChu.getText().trim();
//        if (maHocPhan.equals("") || tenHocPhan.equals("") || soTinChi.equals("") || ghiChu.equals("") ) {
//            JOptionPane.showMessageDialog(rootPane, "Bạn phải nhập đủ thông tin!!!");
//        } else {
//            boolean isUpdate = subjectDao.update(new Subject(subjectSelected.getId(), categoryId, maHocPhan, tenHocPhan, Integer.parseInt(soTinChi), ghiChu));
//            if (isUpdate) {
//                JOptionPane.showMessageDialog(rootPane, "Sửa môn học thành công!!");
//                loadDatatoJTable();
//        }   else {
//                JOptionPane.showMessageDialog(rootPane, "Sửa môn học thất bại!!");
//            }
//        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
//        if (JOptionPane.showConfirmDialog(rootPane, "Bạn thật sự muốn xóa???", "Cảnh báo xóa!!!", JOptionPane.YES_OPTION) != 0) {
//        } else {
//            //boolean isDelete = subjectDao.delete(subjectSelected);
//            Subject deleteSubject = null;
//            int count = 0;
//            for (int i = 0; i < subjectIdSelected.length; i++) {
//                deleteSubject = new Subject(subjectIdSelected[i], 0, "", "", 0, "");
//                if (subjectDao.delete(deleteSubject)) {
//                    count++;
//                }
//            }
//            if (count > 0) {
//                JOptionPane.showMessageDialog(rootPane, "Xóa "+count+" môn học thành công!!");
//                loadDatatoJTable();
//        }   else {
//                JOptionPane.showMessageDialog(rootPane, "Xóa môn học thất bại!!");
//            }
//        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void tblSubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSubjectMouseClicked
        // TODO add your handling code here:
//        btnUpdateCategory.setEnabled(false);
//        btnUpdate.setEnabled(true);
//        btnRemoveCategory.setEnabled(false);
//        btnRemove.setEnabled(true);
//        int rowSelected = tblSubject.getSelectedRow();
//        subjectSelected = listSubject.get(rowSelected);
//        txtMaHocPhan.setInputVerifier(new CheckMaHocPhanVerify(subjectSelected));
//        categorySelected =  categoryDao.get(subjectSelected.getCategoryId()).get();
//        loadDatatoCombox();
//        txtMaHocPhan.setText(subjectSelected.getMaHocPhan());
//        txtTenHocPhan.setText(subjectSelected.getTenHocPhan());
//        txtSoTinChi.setText(String.valueOf(subjectSelected.getSoTinChi()));
//        taGhiChu.setText(subjectSelected.getGhiChu());
//        int[] indexSelected = tblSubject.getSelectedRows();
//        subjectIdSelected = new int [indexSelected.length];
//        for (int i = 0; i < indexSelected.length; i++) {
//            subjectIdSelected[i] = listSubject.get(i).getId();
//
//        }
    }//GEN-LAST:event_tblSubjectMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmQLMH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmQLMH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmQLMH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmQLMH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmQLMH().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNewCategory;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnRemoveCategory;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateCategory;
    private javax.swing.JComboBox<Khoa> cbCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<Khoa> lstCategory;
    private javax.swing.JTextArea taGhiChu;
    private javax.swing.JTable tblSubject;
    private javax.swing.JTextField txtMaHocPhan;
    private javax.swing.JTextField txtSoTinChi;
    private javax.swing.JTextField txtTenHocPhan;
    // End of variables declaration//GEN-END:variables

    private void loadDatatoJList() {
        listModelCategory = new DefaultListModel<>();
        List<Khoa> listCategory = categoryDao.getAll();
        for (Khoa category : listCategory) {
            listModelCategory.addElement(category);
        }
        lstCategory.setModel(listModelCategory);
        
    }

    private void loadDatatoCombox() {
        List<Khoa> khoas = categoryDao.getAll();

//        set models
        DefaultComboBoxModel<Khoa> model = new DefaultComboBoxModel<>();

        // set data from khoa to model
        for (Khoa khoa : khoas){
            model.addElement(khoa);  // Thêm đối tượng Khoa
        }

        // get in to Combobox
        cbCategory.setModel(model);
    }

    private void loadDatatoJTable() {
        DefaultTableModel tblModelSubject = new DefaultTableModel();
        Object[] columnTilte = {"Mã Học Phần","Mã Khoa","Tên Học Phần", "Số Tín Chỉ", "Ghi Chú"};
        tblModelSubject.setColumnIdentifiers(columnTilte);
        listSubject = subjectDao.getAll();
        Object[] rowData = null;


        for (Subject s : listSubject) {
            rowData = new Object[]{s.getTenHocPhan(), s.getMaKhoa(), s.getTenHocPhan(), s.getSoTinChi(), s.getGhiChu()};
            tblModelSubject.addRow(rowData);
        }
        tblSubject.setModel(tblModelSubject);
    }
    
    private void loadDatatoJTableByCategoryId(int[] categoryId) {
//        listSubject.clear();
//        for (int i = 0; i < categoryId.length; i++) {
//            for (Subject s : subjectDao.getByCategoryId(categoryId[i])) {
//                listSubject.add(s);
//            }
//        }
//        tblModelSubject = new DefaultTableModel();
//        Object[] columnTilte = {"Chuyên Ngành"," Mã Học Phần","Tên Học Phần","Số Tín Chỉ","Ghi Chú"};
//        tblModelSubject.setColumnIdentifiers(columnTilte);
//        Object[] rowData = null;
//        String nameCate = "";
//        for (Subject s : listSubject) {
//            nameCate = categoryDao.get(s.getCategoryId()).get().getTenChuyenNganh();
//            rowData = new Object[]{nameCate, s.getMaHocPhan(), s.getTenHocPhan(), s.getSoTinChi(), s.getGhiChu()};
//            tblModelSubject.addRow(rowData);
//        }
//        tblSubject.setModel(tblModelSubject);
        }
    }  
